{"version":3,"sources":["Components/Person.jsx","Components/AddForm.jsx","Components/Filter.jsx","services/persons.js","Components/Notification.jsx","App.js","serviceWorker.js","index.js"],"names":["Person","props","name","number","onClick","deleteHandler","id","AddForm","onSubmit","value","onChange","onNameChange","onNumberChange","type","Filter","filter","axios","get","then","response","data","newObject","post","delete","newPerson","put","Notification","message","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setMessage","useEffect","personService","initialPersons","filteredPersons","person","toLowerCase","includes","removePerson","find","p","window","confirm","catch","error","setTimeout","event","target","preventDefault","undefined","console","log","concat","map","key","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f06fb250.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = (props) => {\r\n    //console.log(props)\r\n    return (\r\n        <li>{props.name} {props.number}\r\n        <button onClick={() => props.deleteHandler(props.id)}>Remove</button>\r\n        </li>)\r\n}\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst AddForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.onSubmit}>\r\n        <div>\r\n          name: <input value={props.name} onChange={props.onNameChange} />\r\n        </div>\r\n        <div>number: <input value={props.number} onChange={props.onNumberChange}/></div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default AddForm","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>Filter shown with <input value={props.filter} onChange={props.onChange} /> </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import axios from \"axios\";\r\n\r\nconst base_url = \"api/persons\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(base_url).then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  return axios.post(base_url, newObject).then((response) => response.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${base_url}/${id}`).then((response) => response.data);\r\n};\r\n\r\nconst updateNumber = (id, newPerson) => {\r\n  return axios\r\n    .put(`${base_url}/${id}`, newPerson)\r\n    .then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, remove, updateNumber };\r\n","import React from 'react'\r\n\r\n\r\nconst Notification = ({message}) => {\r\n    if(message === null){\r\n    return null\r\n    }\r\n    return  <div className={message.type}>\r\n    {message.message}\r\n  </div>\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from \"react\";\nimport Person from \"./Components/Person\";\nimport AddForm from \"./Components/AddForm\";\nimport Filter from \"./Components/Filter\";\nimport personService from \"./services/persons\";\nimport Notification from \"./Components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const fetchPersons = () => {\n    personService.getAll().then((initialPersons) => setPersons(initialPersons));\n  };\n\n  useEffect(fetchPersons, []);\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    };\n    if (persons.find((person) => person.name === newName) === undefined) {\n      personService\n        .create(newPerson)\n        .then((data) => {\n          console.log(data);\n          setPersons(persons.concat(data));\n          setNewName(\"\");\n          setNewNumber(\"\");\n          setMessage({\n            message: `Successfully added ${newPerson.name}`,\n            type: \"status\",\n          });\n          setTimeout(() => setMessage(null), 5000);\n        })\n        .catch((error) => {\n          setMessage({\n            message: `Failed to add ${newPerson.name}, Error: ${error.response.data.error}`,\n            type: \"error\",\n          });\n          setTimeout(() => setMessage(null), 5000);\n        });\n    } else {\n      if (\n        window.confirm(\n          `${newName} is already in the phonebook. Update the number?`\n        )\n      ) {\n        const id = persons.find((person) => person.name === newName).id;\n        personService\n          .updateNumber(id, newPerson)\n          .then((data) => {\n            setPersons(persons.map((p) => (p.id !== id ? p : data)));\n            setNewName(\"\");\n            setNewNumber(\"\");\n            setMessage({\n              message: `Successfully updated ${newPerson.name}`,\n              type: \"status\",\n            });\n            setTimeout(() => setMessage(null), 5000);\n          })\n          .catch((error) => {\n            setMessage({\n              message: `Failed to update ${newPerson.name}. Error: ${error.response.data.error}`,\n              type: \"error\",\n            });\n            //setTimeout(() => setMessage(null), 5000);\n          });\n      }\n    }\n  };\n\n  const filteredPersons =\n    newFilter === \"\"\n      ? persons\n      : persons.filter((person) =>\n          person.name.toLowerCase().includes(newFilter.toLowerCase())\n        );\n\n  const removePerson = (id) => {\n    const person = persons.find((p) => p.id === id);\n    if (window.confirm(`Do you want to delete ${person.name}?`)) {\n      personService\n        .remove(id)\n        .then((response) => {\n          setPersons(persons.filter((p) => p.id !== id));\n          setMessage({\n            message: `Successfully removed entry for ${person.name}`,\n            type: \"status\",\n          });\n        })\n        .catch((error) => {\n          setMessage({\n            message: `Failed to remove entry entry for ${person.name}. Entry already removed from server.`,\n            type: \"error\",\n          });\n          setTimeout(() => setMessage(null), 5000);\n        });\n    }\n  };\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message}></Notification>\n      <Filter\n        filter={newFilter}\n        onChange={(event) => setNewFilter(event.target.value)}\n      ></Filter>\n      <h2>Add new</h2>\n      <AddForm\n        onSubmit={addPerson}\n        name={newName}\n        number={newNumber}\n        onNameChange={handleNameChange}\n        onNumberChange={handleNumberChange}\n      ></AddForm>\n      <h2>Numbers</h2>\n      <ul>\n        {filteredPersons.map((person) => (\n          <Person\n            key={person.id}\n            name={person.name}\n            number={person.number}\n            id={person.id}\n            deleteHandler={removePerson}\n          ></Person>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}